#!/usr/bin/env python

from sys import argv
import numpy as np
from scipy import ndimage


def create_bnx_file():
    for run_id in connection.db_runs:
        mols = [(ndimage.white_tophat(x, structure=np.ones(20)), y) for x, y in connection.yield_molecule_signals_in_run(run_id)]
        molecules_to_bnxv(mols, 10., 485., str(run_id) + "OptiScan.bnx", signal_to_noise_ratio=snr_)


def get_number_of_molecules_in_run(run):
    n = 0
    for scan_id in connection.db_runs[run]:
        scan_info = connection.db_runs[run][scan_id]
        for col_id in scan_info["columns"]:
            col_info = scan_info["columns"][col_id]
            n += int(col_info["molecule_count"])
    return n


def main(database_name: str, snr: float = 3.2):
    """
    :param database_name: Name of the database created by 'extract_molecules_irys'
    :param snr: default is 3.2
    :return:
    """
    return database_name, snr


if __name__ == "__main__":
    from OptiScan.database import MoleculeConnector, molecules_to_bnxv
    import fire
    database_name_, snr_ = fire.Fire(main)
    connection = MoleculeConnector(database_name_)
    connection.connect_db()
    print("Run folders in database:")
    for run_id in connection.db_runs:
        print(run_id)
        print("\tNumber of scans in run -> %s" % len(connection.db_runs[run_id]))
        print("\tNumber of molecules in run -> %s" % get_number_of_molecules_in_run(run_id))
    create_bnx_file()

