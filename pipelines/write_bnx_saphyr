#!/usr/bin/env python

from sys import argv
import numpy as np
from scipy import ndimage


def create_bnx_file():
    molecule_labels = list()
    molecule_backbones = list()
    for bank_id in run_tree.bank_info:
        bank_path = run_tree.saphyr_tree.root + bank_id
        number_of_columns = len(run_tree.bank_info[bank_id])//2
        for i in range(number_of_columns):
            try:
                molecule_labels += list(np.load(f"{bank_path}/{i}_label.npy", allow_pickle=True))
                molecule_backbones += list(np.load(f"{bank_path}/{i}_backbone.npy", allow_pickle=True))
            except FileNotFoundError:
                continue

    mols = [(ndimage.white_tophat(molecule_labels[x], structure=np.ones(10)),
             molecule_backbones[x]) for x in range(len(molecule_labels))]
    molecules_to_bnxv2(mols, 10., 485., str(run_tree.saphyr_tree.root) + "OptiScan.bnx", bnx_template_path=bnx_header_file_path_,
                     signal_to_noise_ratio=snr_)


def main(run_path: str, snr: float = 3.2, bnx_header_file_path: str = "bnx_head.txt"):
    """
    :param database_name: Name of the database created by 'extract_molecules_saphyr'
    :param snr: default is 3.2
    :param bnx_header_file_path: path to the bnx_head.txt file.
    :return:
    """
    return run_path, snr, bnx_header_file_path


if __name__ == "__main__":
    from OptiScan.database import molecules_to_bnxv2
    from OptiScan.scan import SaphyrFileTree, SaphyrExtract
    import fire
    run_path_, snr_, bnx_header_file_path_ = fire.Fire(main)
    run_tree = SaphyrExtract(run_path_)
    create_bnx_file()
